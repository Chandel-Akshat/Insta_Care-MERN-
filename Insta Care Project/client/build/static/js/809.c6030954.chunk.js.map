{"version":3,"file":"static/js/809.c6030954.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/Footer.jsx","components/Navbar.jsx","pages/Notifications.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Empty = () => {\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\n};\n\nexport default Empty;\n","import React from \"react\";\nimport \"../styles/footer.css\";\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <>\n      <footer>\n        <div className=\"footer\">\n          <div className=\"footer-links\">\n            <h3>Links</h3>\n            <ul>\n              <li>\n                <NavLink to={\"/\"}>Home</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"social\">\n            <h3>Social links</h3>\n            <ul>\n              <li className=\"facebook\">\n                <a\n                  href=\"https://www.facebook.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaFacebookF />\n                </a>\n              </li>\n              <li className=\"youtube\">\n                <a\n                  href=\"https://www.youtube.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaYoutube />\n                </a>\n              </li>\n              <li className=\"instagram\">\n                <a\n                  href=\"https://www.instagram.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaInstagram />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          Made by Avinash Â© {new Date().getFullYear()}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../styles/navbar.css\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { RxCross1 } from \"react-icons/rx\";\nimport jwt_decode from \"jwt-decode\";\n\nconst Navbar = () => {\n  const [iconActive, setIconActive] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [user, setUser] = useState(\n    localStorage.getItem(\"token\")\n      ? jwt_decode(localStorage.getItem(\"token\"))\n      : \"\"\n  );\n\n  const logoutFunc = () => {\n    dispatch(setUserInfo({}));\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <header>\n      <nav className={iconActive ? \"nav-active\" : \"\"}>\n        <h2 className=\"nav-logo\">\n          <NavLink to={\"/\"}>HealthBooker</NavLink>\n        </h2>\n        <ul className=\"nav-links\">\n          <li>\n            <NavLink to={\"/\"}>Home</NavLink>\n          </li>\n          <li>\n            <NavLink to={\"/doctors\"}>Doctors</NavLink>\n          </li>\n          {token && user.isAdmin && (\n            <li>\n              <NavLink to={\"/dashboard/users\"}>Dashboard</NavLink>\n            </li>\n          )}\n          {token && !user.isAdmin && (\n            <>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/applyfordoctor\"}>Apply for doctor</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </>\n          )}\n          {!token ? (\n            <>\n              <li>\n                <NavLink\n                  className=\"btn\"\n                  to={\"/login\"}\n                >\n                  Login\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  className=\"btn\"\n                  to={\"/register\"}\n                >\n                  Register\n                </NavLink>\n              </li>\n            </>\n          ) : (\n            <li>\n              <span\n                className=\"btn\"\n                onClick={logoutFunc}\n              >\n                Logout\n              </span>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <div className=\"menu-icons\">\n        {!iconActive && (\n          <FiMenu\n            className=\"menu-open\"\n            onClick={() => {\n              setIconActive(true);\n            }}\n          />\n        )}\n        {iconActive && (\n          <RxCross1\n            className=\"menu-close\"\n            onClick={() => {\n              setIconActive(false);\n            }}\n          />\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/notification.css\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport \"../styles/user.css\";\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllNotif = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/notification/getallnotifs`);\n      dispatch(setLoading(false));\n      setNotifications(temp);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getAllNotif();\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Notifications</h2>\n\n          {notifications.length > 0 ? (\n            <div className=\"notifications\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Content</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {notifications?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>{ele?.content}</td>\n                        <td>{ele?.updatedAt.split(\"T\")[0]}</td>\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Notifications;\n"],"names":["className","to","href","target","rel","Date","getFullYear","useState","iconActive","setIconActive","dispatch","useDispatch","navigate","useNavigate","localStorage","getItem","token","jwt_decode","user","isAdmin","onClick","setUserInfo","removeItem","notifications","setNotifications","loading","useSelector","state","root","getAllNotif","e","setLoading","fetchData","temp","useEffect","Navbar","Loading","length","map","ele","i","content","updatedAt","split","_id","Empty","Footer"],"sourceRoot":""}